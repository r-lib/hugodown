% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hugo-server.R
\name{hugo_start}
\alias{hugo_start}
\alias{hugo_stop}
\alias{hugo_browse}
\title{Manage the hugo server}
\usage{
hugo_start(
  site = ".",
  auto_navigate = TRUE,
  browse = TRUE,
  render_to_disk = FALSE,
  port = 1313
)

hugo_stop()

hugo_browse()
}
\arguments{
\item{site}{Path to hugo site.}

\item{auto_navigate}{Automatically navigate to the most recently changed
page?}

\item{browse}{Automatically preview the site after the server starts?}

\item{render_to_disk}{Render site to disk? The default is to serve the
site from memory, but rendering to disk can be helpful for debugging.}

\item{port}{Port to run server on. For advanced use only.}
}
\description{
\code{hugo_start()} starts a hugo server that will automatically re-generate
the site whenever the input changes. You only need to execute this once
per session; it continues to run in the background as you work on the site.

\code{hugo_stop()} kills the server. This happens automatically when you exit
R so you shouldn't normally need to run this.

\code{hugo_browse()} opens the site in the RStudio viewer or your web browser.
}
\section{Hugo version}{

hugodown will attempt to automatically use the correct version of hugo for
your site (prompting you to call \code{\link[=hugo_install]{hugo_install()}} if needed). It looks in
two places:
\itemize{
\item If \verb{_hugodown.yaml} is present, it looks for the \code{hugo_version} key.
\item If \code{netlify.toml} is present, it looks in
\code{context$production$environment$HUGO_VERSION}
}

This means if you already use netlify, hugodown will automatically match
the version of hugo that you're using for deployment.
}

